server:
  port: 8383

spring:
  application:
    name: hotel
  kafka:
    bootstrap-servers: host.docker.internal:29092,host.docker.internal:29093
    listener:
      ack-mode: record
    producer:
      client-id: ${spring.application.name}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: ru.demonstration.project.config.DltMessageSerializer
      retries: 3
    consumer:
      group-id: ${spring.application.name}
      autoOffsetReset: earliest
      keyDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    properties:
      spring.json.value.default.type: ru.demonstration.project.kafka.dto.JsonMessage
      spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
      spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
  h2:
    console:
      enabled: true
      path: /h2-consolechka
  sql:
    init:
      mode: always
  datasource:
    url: jdbc:h2:mem:hoteldb;DB_CLOSE_DELAY=-1
    driverClassName: org.h2.Driver
    username: sa
    password:
  config:
    activate:
      on-profile: ${PROFILE:default}
  jpa:
    open-in-view: ${SPRING_JPA_OPEN_IN_VIEW:false}
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  main:
    allow-bean-definition-overriding: ${SPRING_ALLOW_BEAN_OVERRIDING:true}

kafka:
  topics:
    test-topic: topic1

logging:
  level:
    root: INFO
    org.springframework.web: ERROR
    org.hibernate: ERROR

web:
  client:
    base-url: ${WEB_CLIENT_BASE_URL:http://localhost:8383}
    feign:
      options:
        connect-timeout-millis: ${CONNECT_TIMEOUT_MILLIS:300}
        read-timeout-millis: ${READ_TIMEOUT_MILLIS:3000}
        follow-redirects: ${FOLLOW_REDIRECT:true}
      retryer:
        period: ${RETRYER_PERIOD:100}
        duration: ${RETRYER_DURATION:1}
        max-attempts: ${RETRYER_MAX_ATTEMPTS:1}

springdoc:
  swagger-ui:
    url: src/main/resources/hotel_open_api_controllers.yml

gigachat:
